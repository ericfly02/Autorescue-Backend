CREATE SCHEMA IF NOT EXISTS hesbst_base;

SET
    search_path = gea_base;

-- SIGNATARI_TIPUS
CREATE TABLE SIGNATARI_TIPUS (
    ID bigint GENERATED BY DEFAULT AS IDENTITY (START WITH 1) NOT NULL,
    CODE VARCHAR (225) NOT NULL,
    CREATE_DATE TIMESTAMP (6),
    UPDATE_DATE TIMESTAMP (6),
    DELETE_DATE TIMESTAMP (6),
    CREATE_USER VARCHAR(200),
    UPDATE_USER VARCHAR(200),
    DELETE_USER VARCHAR(200),
    PRIMARY KEY(ID)
);

CREATE TABLE SIGNATARI_TIPUS_LANGUAGE (
    ID BIGINT GENERATED BY DEFAULT AS IDENTITY (START WITH 1) NOT NULL,
    REF_ID BIGINT NOT NULL,
    LANGUAGE_CODE VARCHAR(255) NOT NULL,
    DESCRIPTION VARCHAR(255) NOT NULL,
    CREATE_DATE TIMESTAMP (6),
    UPDATE_DATE TIMESTAMP (6),
    DELETE_DATE TIMESTAMP (6),
    CREATE_USER VARCHAR(200),
    UPDATE_USER VARCHAR(200),
    DELETE_USER VARCHAR(200),
    PRIMARY KEY (ID),
    FOREIGN KEY (REF_ID) REFERENCES SIGNATARI_TIPUS(ID)
);

-- CONSENTIMENT_TIPUS
CREATE TABLE CONSENTIMENT_TIPUS (
    ID bigint GENERATED BY DEFAULT AS IDENTITY (START WITH 1) NOT NULL,
    CODE VARCHAR (225) NOT NULL,
    CREATE_DATE TIMESTAMP (6),
    UPDATE_DATE TIMESTAMP (6),
    DELETE_DATE TIMESTAMP (6),
    CREATE_USER VARCHAR(200),
    UPDATE_USER VARCHAR(200),
    DELETE_USER VARCHAR(200),
    PRIMARY KEY(ID)
);

CREATE TABLE CONSENTIMENT_TIPUS_LANGUAGE (
    ID BIGINT GENERATED BY DEFAULT AS IDENTITY (START WITH 1) NOT NULL,
    REF_ID BIGINT NOT NULL,
    LANGUAGE_CODE VARCHAR(255) NOT NULL,
    DESCRIPTION VARCHAR(255) NOT NULL,
    CREATE_DATE TIMESTAMP (6),
    UPDATE_DATE TIMESTAMP (6),
    DELETE_DATE TIMESTAMP (6),
    CREATE_USER VARCHAR(200),
    UPDATE_USER VARCHAR(200),
    DELETE_USER VARCHAR(200),
    PRIMARY KEY (ID),
    FOREIGN KEY (REF_ID) REFERENCES CONSENTIMENT_TIPUS(ID)
);

-- PROCEDIMENT
CREATE TABLE PROCEDIMENT (
    ID bigint GENERATED BY DEFAULT AS IDENTITY (START WITH 1) NOT NULL,
    CODE VARCHAR (225) NOT NULL,
    CREATE_DATE TIMESTAMP (6),
    UPDATE_DATE TIMESTAMP (6),
    DELETE_DATE TIMESTAMP (6),
    CREATE_USER VARCHAR(200),
    UPDATE_USER VARCHAR(200),
    DELETE_USER VARCHAR(200),
    PRIMARY KEY(ID)
);

CREATE TABLE PROCEDIMENT_LANGUAGE (
    ID BIGINT GENERATED BY DEFAULT AS IDENTITY (START WITH 1) NOT NULL,
    REF_ID BIGINT NOT NULL,
    LANGUAGE_CODE VARCHAR(255) NOT NULL,
    DESCRIPTION VARCHAR(255) NOT NULL,
    CREATE_DATE TIMESTAMP (6),
    UPDATE_DATE TIMESTAMP (6),
    DELETE_DATE TIMESTAMP (6),
    CREATE_USER VARCHAR(200),
    UPDATE_USER VARCHAR(200),
    DELETE_USER VARCHAR(200),
    PRIMARY KEY (ID),
    FOREIGN KEY (REF_ID) REFERENCES PROCEDIMENT(ID)
);

-- Diagnostic
CREATE TABLE DIAGNOSTIC(
    ID bigint GENERATED BY DEFAULT AS IDENTITY (START WITH 1) NOT NULL,
    CODE VARCHAR(64) NOT NULL,
    CREATE_DATE TIMESTAMP (6),
    UPDATE_DATE TIMESTAMP (6),
    DELETE_DATE TIMESTAMP (6),
    CREATE_USER VARCHAR(200),
    UPDATE_USER VARCHAR(200),
    DELETE_USER VARCHAR(200),
    PRIMARY KEY (ID)
);

CREATE TABLE DIAGNOSTIC_LANGUAGE (
    ID BIGINT GENERATED BY DEFAULT AS IDENTITY (START WITH 1) NOT NULL,
    REF_ID BIGINT NOT NULL,
    LANGUAGE_CODE VARCHAR(255) NOT NULL,
    DESCRIPTION VARCHAR(255) NOT NULL,
    CREATE_DATE TIMESTAMP (6),
    UPDATE_DATE TIMESTAMP (6),
    DELETE_DATE TIMESTAMP (6),
    CREATE_USER VARCHAR(200),
    UPDATE_USER VARCHAR(200),
    DELETE_USER VARCHAR(200),
    PRIMARY KEY (ID),
    FOREIGN KEY (REF_ID) REFERENCES DIAGNOSTIC(ID)
);

-- ESTAT
CREATE TABLE ESTAT (
    ID bigint GENERATED BY DEFAULT AS IDENTITY (START WITH 1) NOT NULL,
    CODE VARCHAR (225) NOT NULL,
    CREATE_DATE TIMESTAMP (6),
    UPDATE_DATE TIMESTAMP (6),
    DELETE_DATE TIMESTAMP (6),
    CREATE_USER VARCHAR(200),
    UPDATE_USER VARCHAR(200),
    DELETE_USER VARCHAR(200),
    PRIMARY KEY(ID)
);

CREATE TABLE ESTAT_LANGUAGE (
    ID BIGINT GENERATED BY DEFAULT AS IDENTITY (START WITH 1) NOT NULL,
    REF_ID BIGINT NOT NULL,
    LANGUAGE_CODE VARCHAR(255) NOT NULL,
    DESCRIPTION VARCHAR(255) NOT NULL,
    CREATE_DATE TIMESTAMP (6),
    UPDATE_DATE TIMESTAMP (6),
    DELETE_DATE TIMESTAMP (6),
    CREATE_USER VARCHAR(200),
    UPDATE_USER VARCHAR(200),
    DELETE_USER VARCHAR(200),
    PRIMARY KEY (ID),
    FOREIGN KEY (REF_ID) REFERENCES ESTAT(ID)
);

--DOCUMENT_TIPUS
CREATE TABLE DOCUMENT_TIPUS (
    ID bigint GENERATED BY DEFAULT AS IDENTITY (START WITH 1) NOT NULL,
    CODE VARCHAR (225) NOT NULL,
    CREATE_DATE TIMESTAMP (6),
    UPDATE_DATE TIMESTAMP (6),
    DELETE_DATE TIMESTAMP (6),
    CREATE_USER VARCHAR(200),
    UPDATE_USER VARCHAR(200),
    DELETE_USER VARCHAR(200),
    PRIMARY KEY(ID)
);

CREATE TABLE DOCUMENT_TIPUS_LANGUAGE (
    ID BIGINT GENERATED BY DEFAULT AS IDENTITY (START WITH 1) NOT NULL,
    REF_ID BIGINT NOT NULL,
    LANGUAGE_CODE VARCHAR(255) NOT NULL,
    DESCRIPTION VARCHAR(255) NOT NULL,
    CREATE_DATE TIMESTAMP (6),
    UPDATE_DATE TIMESTAMP (6),
    DELETE_DATE TIMESTAMP (6),
    CREATE_USER VARCHAR(200),
    UPDATE_USER VARCHAR(200),
    DELETE_USER VARCHAR(200),
    PRIMARY KEY (ID),
    FOREIGN KEY (REF_ID) REFERENCES DOCUMENT_TIPUS(ID)
);

--IDENTIFICACIO_TIPUS
CREATE TABLE IDENTIFICACIO_TIPUS(
    ID bigint GENERATED BY DEFAULT AS IDENTITY (START WITH 1) NOT NULL,
    CODE VARCHAR (225) NOT NULL,
    CREATE_DATE TIMESTAMP (6),
    UPDATE_DATE TIMESTAMP (6),
    DELETE_DATE TIMESTAMP (6),
    CREATE_USER VARCHAR(200),
    UPDATE_USER VARCHAR(200),
    DELETE_USER VARCHAR(200),
    PRIMARY KEY(ID)
);

CREATE TABLE IDENTIFICACIO_TIPUS_LANGUAGE (
    ID BIGINT GENERATED BY DEFAULT AS IDENTITY (START WITH 1) NOT NULL,
    REF_ID BIGINT NOT NULL,
    LANGUAGE_CODE VARCHAR(255) NOT NULL,
    DESCRIPTION VARCHAR(255) NOT NULL,
    CREATE_DATE TIMESTAMP (6),
    UPDATE_DATE TIMESTAMP (6),
    DELETE_DATE TIMESTAMP (6),
    CREATE_USER VARCHAR(200),
    UPDATE_USER VARCHAR(200),
    DELETE_USER VARCHAR(200),
    PRIMARY KEY (ID),
    FOREIGN KEY (REF_ID) REFERENCES IDENTIFICACIO_TIPUS(ID)
);

--ROL
CREATE TABLE ROL(
    ID bigint GENERATED BY DEFAULT AS IDENTITY (START WITH 1) NOT NULL,
    CODE VARCHAR (225) NOT NULL,
    CREATE_DATE TIMESTAMP (6),
    UPDATE_DATE TIMESTAMP (6),
    DELETE_DATE TIMESTAMP (6),
    CREATE_USER VARCHAR(200),
    UPDATE_USER VARCHAR(200),
    DELETE_USER VARCHAR(200),
    PRIMARY KEY(ID)
);

CREATE TABLE ROL_LANGUAGE (
    ID BIGINT GENERATED BY DEFAULT AS IDENTITY (START WITH 1) NOT NULL,
    REF_ID BIGINT NOT NULL,
    LANGUAGE_CODE VARCHAR(255) NOT NULL,
    DESCRIPTION VARCHAR(255) NOT NULL,
    CREATE_DATE TIMESTAMP (6),
    UPDATE_DATE TIMESTAMP (6),
    DELETE_DATE TIMESTAMP (6),
    CREATE_USER VARCHAR(200),
    UPDATE_USER VARCHAR(200),
    DELETE_USER VARCHAR(200),
    PRIMARY KEY (ID),
    FOREIGN KEY (REF_ID) REFERENCES ROL(ID)
);


--SIGNATARI
CREATE TABLE SIGNATARI(
    ID bigint GENERATED BY DEFAULT AS IDENTITY (START WITH 1),
    NOM VARCHAR (225),
    PRIMER_COGNOM VARCHAR (225),
    SEGON_COGNOM VARCHAR (225),
    IDENTIFICACIO_TIPUS_ID BIGINT,
    VALOR_IDENTIFICACIO VARCHAR (225),
    CREATE_DATE TIMESTAMP (6),
    UPDATE_DATE TIMESTAMP (6),
    DELETE_DATE TIMESTAMP (6),
    CREATE_USER VARCHAR(200),
    UPDATE_USER VARCHAR(200),
    DELETE_USER VARCHAR(200),
    PRIMARY KEY (ID),
    FOREIGN KEY (IDENTIFICACIO_TIPUS_ID) REFERENCES IDENTIFICACIO_TIPUS(ID)
);

--PROFESSIONAL
CREATE TABLE PROFESSIONAL (
    ID bigint GENERATED BY DEFAULT AS IDENTITY (START WITH 1) NOT NULL,
    NOM VARCHAR (225) NOT NULL,
	PRIMER_COGNOM VARCHAR (225) NOT NULL,
    SEGON_COGNOM VARCHAR (225),
    IDENTIFICACIO_TIPUS_ID BIGINT NOT NULL,
    VALOR_IDENTIFICACIO VARCHAR (225) NOT NULL,
    NUM_COL VARCHAR (225),
    ROL_ID BIGINT NOT NULL,
    CREATE_DATE TIMESTAMP (6),
    UPDATE_DATE TIMESTAMP (6),
    DELETE_DATE TIMESTAMP (6),
    CREATE_USER VARCHAR(200),
    UPDATE_USER VARCHAR(200),
    DELETE_USER VARCHAR(200),
    PRIMARY KEY (ID),
    FOREIGN KEY (IDENTIFICACIO_TIPUS_ID) REFERENCES IDENTIFICACIO_TIPUS(ID),
	FOREIGN KEY (ROL_ID) REFERENCES ROL(ID)
);

--PACIENT
CREATE TABLE PACIENT(
    ID bigint GENERATED BY DEFAULT AS IDENTITY (START WITH 1) NOT NULL,
    MPI VARCHAR (225) NOT NULL,
    CIP VARCHAR (225),
    NOM VARCHAR (225),
    PRIMER_COGNOM VARCHAR (225),
    SEGON_COGNOM VARCHAR (225),
    IDENTIFICACIO_TIPUS_ID BIGINT,
    VALOR_IDENTIFICACIO VARCHAR (225),
    CREATE_DATE TIMESTAMP (6),
    UPDATE_DATE TIMESTAMP (6),
    DELETE_DATE TIMESTAMP (6),
    CREATE_USER VARCHAR(200),
    UPDATE_USER VARCHAR(200),
    DELETE_USER VARCHAR(200),
    PRIMARY KEY (ID),
    FOREIGN KEY (IDENTIFICACIO_TIPUS_ID) REFERENCES IDENTIFICACIO_TIPUS(ID)
);

--CONSENTIMENT
CREATE TABLE CONSENTIMENT (
    ID bigint GENERATED BY DEFAULT AS IDENTITY (START WITH 1) NOT NULL,
	CODI VARCHAR(225),
    EP_CODI VARCHAR (225) NOT NULL,
    UP_CODI VARCHAR (225) NOT NULL,
    CENTRE_TIPUS VARCHAR (225) NOT NULL,
    CENTRE_CODI VARCHAR (225),
    SERVEI_CODI VARCHAR (225) NOT NULL,
    DOCUMENT_TIPUS_ID BIGINT NOT NULL,
    SI_ORIGEN_LEGACY VARCHAR (225) NOT NULL,
    CONSENTIMENT_TIPUS_ID BIGINT NOT NULL,
    PROCEDIMENT_ID BIGINT,
	DIAGNOSTIC_ID BIGINT,
    PACIENT_ID BIGINT NOT NULL,
	NHC VARCHAR(100),
    PROFESSIONAL_ID BIGINT NOT NULL,
    CREATE_DATE TIMESTAMP (6),
    UPDATE_DATE TIMESTAMP (6),
    DELETE_DATE TIMESTAMP (6),
    CREATE_USER VARCHAR(200),
    UPDATE_USER VARCHAR(200),
    DELETE_USER VARCHAR(200),
    PRIMARY KEY(ID),
    FOREIGN KEY (DOCUMENT_TIPUS_ID) REFERENCES DOCUMENT_TIPUS(ID),
	FOREIGN KEY (CONSENTIMENT_TIPUS_ID) REFERENCES CONSENTIMENT_TIPUS(ID),
	FOREIGN KEY (PROCEDIMENT_ID) REFERENCES PROCEDIMENT(ID),
	FOREIGN KEY (DIAGNOSTIC_ID) REFERENCES DIAGNOSTIC(ID),
    FOREIGN KEY (PACIENT_ID) REFERENCES PACIENT(ID),
    FOREIGN KEY (PROFESSIONAL_ID) REFERENCES PROFESSIONAL(ID)
);

-- ESTAT_HISTORIAL
CREATE TABLE ESTAT_HISTORIAL (
    ID bigint GENERATED BY DEFAULT AS IDENTITY (START WITH 1) NOT NULL,
    CONSENTIMENT_ID BIGINT NOT NULL,
    ESTAT_ID BIGINT NOT NULL,
    DATA_SIGNATURA TIMESTAMP (6),
	DOCUMENT_CONSENTIMENT VARCHAR(max) NOT NULL,
    PACIENT_ID BIGINT,
	SIGNATARI_ID BIGINT,
	SIGNATARI_TIPUS_ID BIGINT,
    CREATE_DATE TIMESTAMP (6),
    UPDATE_DATE TIMESTAMP (6),
    DELETE_DATE TIMESTAMP (6),
    CREATE_USER VARCHAR(200),
    UPDATE_USER VARCHAR(200),
    DELETE_USER VARCHAR(200),
    PRIMARY KEY(ID),
    FOREIGN KEY (CONSENTIMENT_ID) REFERENCES CONSENTIMENT(ID),
    FOREIGN KEY (PACIENT_ID) REFERENCES PACIENT(ID),
	FOREIGN KEY (SIGNATARI_ID) REFERENCES SIGNATARI(ID),
	FOREIGN KEY (SIGNATARI_TIPUS_ID) REFERENCES SIGNATARI_TIPUS(ID),
    FOREIGN KEY (ESTAT_ID) REFERENCES ESTAT(ID)
);
